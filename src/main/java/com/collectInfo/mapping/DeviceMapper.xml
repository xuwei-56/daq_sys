<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.collectInfo.dao.DeviceDao" >
  <resultMap id="BaseResultMap" type="com.collectInfo.model.Device" >
    <id column="device_id" property="deviceId" jdbcType="INTEGER" />
    <result column="device_ip" property="deviceIp" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    device_id, device_ip, address
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from device
    where device_id = #{deviceId,jdbcType=INTEGER}
  </select>
  <select id="getUserByDeviceIp" resultType="java.util.HashMap" parameterType="String">
  	select u.user_id,user_name,phone_number,is_root
  	from user u,device d,manage m
  	where u.user_id = m.user_id and d.device_id = m.device_id and d.device_ip = #{0}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from device
    where device_id = #{deviceId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.collectInfo.model.Device" useGeneratedKeys="true" keyProperty="deviceId">
    insert into device (device_ip, address
      )
    values (#{deviceIp,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.collectInfo.model.Device" >
    insert into device
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="deviceIp != null" >
        device_ip,
      </if>
      <if test="address != null" >
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="deviceIp != null" >
        #{deviceIp,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.collectInfo.model.Device" >
    update device
    <set >
      <if test="deviceIp != null" >
        device_ip = #{deviceIp,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where device_id = #{deviceId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.collectInfo.model.Device" >
    update device
    set device_ip = #{deviceIp,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR}
    where device_id = #{deviceId,jdbcType=INTEGER}
  </update>
  <select id="getDeviceByIp" resultType="java.util.HashMap" parameterType="String" >
    select 
    d.device_id deviceId, device_ip deviceIp, address, u.user_name userName
    from device d, manage m, user u
    where device_ip = #{0} and d.device_id = m.device_id and m.user_id = u.user_id
  </select>
  <select id="getDeviceByAddress" resultType="java.util.HashMap" >
    select 
    d.device_id deviceId, device_ip deviceIp, address, u.user_name userName
    from device d, manage m, user u
    where address like "%"#{0}"%" and d.device_id = m.device_id and m.user_id = u.user_id
    order by u.user_name limit #{1},#{2}
  </select>
  <select id="getDeviceCountByAddress" resultType="int" >
    select 
    count(*)
    from device d, manage m, user u
    where address like "%"#{0}"%" and d.device_id = m.device_id and m.user_id = u.user_id
  </select>
  <select id="getDeviceByUserName" resultType="java.util.HashMap" >
    select 
    d.device_id deviceId, device_ip deviceIp, address, u.user_name userName
    from device d, manage m, user u
    where user_name = #{0} and d.device_id = m.device_id and m.user_id = u.user_id
    order by d.device_id desc limit #{1},#{2}
  </select>
  <select id="getDeviceCountByUserName" resultType="int" >
    select 
    count(*)
    from device d, manage m, user u
    where user_name = #{0} and d.device_id = m.device_id and m.user_id = u.user_id
  </select>
  <select id="getDevice" resultType="HashMap">
    select 
    d.device_id deviceId, device_ip deviceIp, address, u.user_name userName
    from device d, manage m, user u
    where d.device_id = m.device_id and m.user_id = u.user_id
    order by d.device_id desc limit #{0},#{1}
  </select>
  <select id="getDeviceCountByUserId" resultType="int">
    select 
    count(*)
    from manage
    where user_id = #{0}
  </select>
  <select id="getDeviceCount" resultType="int">
    select 
    count(*)
    from manage
  </select>
</mapper>